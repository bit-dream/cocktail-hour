version: '3.7'

services:
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - './api:/usr/src/app'
    ports:
      - 5000:5000
    environment:
      - FLASK_CONFIG=production
      - FLASK_ENV=production
    depends_on:
      - db

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
      - client
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - './client:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_SERVICE_URL=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api

  db:
    image: postgres:14.1-alpine
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
      - ./database/create_fixtures.sql:/docker-entrypoint-initdb.d/create_fixtures.sql
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=database
      - POSTGRES_USER=djblack
    ports:
      - '5432:5432'

volumes:
  db:
    driver: local
      